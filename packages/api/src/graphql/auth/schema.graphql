################################ Mutation signIn ################################

"User info received from authentication provider"
type AuthProviderUser {
  "User ID"
  id: ID!
  "User email. Not stored in database and only available with sign in payload."
  email: String!
}

input GoogleJWTAuthInput {
  "JSON Web Token"
  token: String!
}

union SignInAuthInput = GoogleJWTAuthInput

input SignInInput {
  auth: SignInAuthInput!
}

type SignInPayload {
  "Signed in user"
  signedInUser: SignedInUser!
  "User info from auth provider"
  authProviderUser: AuthProviderUser!
  "Available SignedInUser.id's after sign in"
  availableUserIds: [ObjectID!]!
}

type SignInFailedError implements Error {
  message: String!
}

union SignInResult = SignInPayload | SignInFailedError

extend type Mutation {
  "Sign in using an auth provider"
  signIn(input: SignInInput!): SignInResult!
}

################################ Mutation signOut ################################

"Sign out of current session unless allSessions or sessionId is specified"
input SignOutInput {
  " Sign out a specific user by SignedInUser.id. If userId is not specified then all known users are signed out."
  userId: ObjectID!
}

type SignOutPayload {
  "Available SignedInUser.id's after sign out."
  availableUserIds: [ObjectID!]!
}

type SignOutFailedError implements Error {
  message: String!
}

union SignOutResult = SignOutPayload | SignOutFailedError

extend type Mutation {
  "Sign out a user"
  signOut(input: SignOutInput): SignOutResult!
}

################################ Mutation syncSessionCookies ################################

input SyncSessionCookiesInput {
  "Available user ids provided by the client"
  availableUserIds: [ObjectID!]!
}

type SyncSessionCookiesPayload {
  "User ids available in http-only cookies. Any other user id is expired."
  availableUserIds: [ObjectID!]!
}

extend type Mutation {
  "Synchronize http-only session cookies. Only sessions available both in client and server are kept."
  syncSessionCookies(input: SyncSessionCookiesInput!): SyncSessionCookiesPayload!
}
