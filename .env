
#############################################################################
############################### General #####################################
#############################################################################

# --------------------- GENERAL -------------

# Logging, "object" or "json", recommended "json" when using CloudWatch
DEBUG_FORMAT=object

# AWS credentials are defined
# Uncomment if AWS credentials are available. Required to run infra e2e tests (synthesizes a test template).
#AWS_CDK=1


# --------------------- MOCK -----------------

# Mock Google OAuth2, only works during development
VITE_MOCK_GOOGLE_AUTH=true


# --------------------- APP -----------------

# Variables starting wil VITE_ will be hard coded into built app
VITE_GRAPHQL_HTTP_URL=http://localhost:4000/graphql
VITE_GRAPHQL_WS_URL=ws://localhost:4000/graphql

# Uncomment to enable Google Login, must also set VITE_MOCK_GOOGLE_AUTH to false
#VITE_GOOGLE_CLIENT_ID="123456789000-abcdabcdabcdabcdabcdabcd123abcd1.apps.googleusercontent.com"


# --------------------- API -----------------

# Uncomment to enable Google Login, must also set VITE_MOCK_GOOGLE_AUTH to false
#GOOGLE_CLIENT_SECRET=ABCDEF-abcdefgabcdefgabcdef123dca12

# MongoDB
MONGODB_URI=mongodb://localhost:27017/notes?replicaSet=rs0
# MongoDB tier type, M0 => "free", M10 or higher => "enterprise"
# Must be "enterprise" to test atlas search
MONGODB_TIER="enterprise"
# Service name is required when communicating between containers
DOCKER_MONGODB_SERVICE_NAME=mongod

# DynamoDB
DYNAMODB_ENDPOINT=http://localhost:8000
# Service name is required when communicating between containers
DOCKER_DYNAMODB_SERVICE_NAME=dynamodb-local

# AWS Rest Api
AWS_REST_API_URL=http://localhost:3000



#############################################################################
################################ Infrastructure #############################
#############################################################################

# --------------------- DOMAINS ------------------

# Creates domains in Route53, format "<zoneName>,<zoneId>,<primaryName>(,<aliases>);..."
#DOMAINS="mydomain.com,ABCDEFG123ABCEF12312,sub.mydomain.com"


# --------------------- CLOUDFRONT ---------------

# Certificate used by CloudFront for secure context, must already be created and in region "us-east-1"
#CLOUDFRONT_CERTIFICATE_ARN=arn:aws:acm:us-east-1:123456789012:certificate/aaaaaaaa-bbbb-cccc-eeee-ffffffffffff
# Disable caching of static files for debugging purposes, default 0/false
#DEBUG_DISABLE_CDN_CACHING=false


# --------------------- MongoDB ------------------

# STS used for AWS IAM Authentication to connect to MongoDB Atlas using session token
#STS_REGION=eu-west-1

# Secret "cfn/atlas/profile/default" must be defined in AWS Secrets Manager (in plaintext: { "PublicKey": "<public key value>", "PrivateKey": "<private key value>" })
#MONGODB_ATLAS_PROFILE=default
# Existing MongoDB Atlas organization id
#MONGODB_ATLAS_ORG_ID=1234adadabdc12312312ccdg
#MONGODB_ATLAS_REGION=EU_WEST_1
# Name must be unique within an organization
#MONGODB_ATLAS_PROJECT_NAME=project-notes
#MONGODB_ATLAS_CLUSTER_NAME=cluster-notes
#MONGODB_ATLAS_DATABASE_NAME=notes

# --------------------- DynamoDB ------------------

# DynamoDB stores WebSocket state
#DYNAMODB_REGION=eu-west-1

# --------------------- API -----------------------

# Used for sending WebSocket messages
#API_GATEWAY_MANAGEMENT_REGION=eu-west-1




