#############################################################################
############################### General #####################################
#############################################################################

# --------------------- GENERAL ---------------------

# Logging format: "object" or "json". Recommended: "json" for CloudWatch
DEBUG_FORMAT=object

# Uncomment if AWS credentials are available. Required to run infra e2e tests (synthesizes a test template).
#AWS_CDK=true

# --------------------- DEMO ---------------------

# Demo mode of the app, enables quick sign in with demo accounts with seeded data
#VITE_DEMO_ENABLED=false

# How often demo is reset in milliseconds, default 1 day
#DEMO_RESET_INTERVAL=86400000

# --------------------- MOCK ------------------------

# Mock Google OAuth2 (only works during development)
VITE_MOCK_GOOGLE_AUTH=true

# --------------------- APP -------------------------

# Port used when running the app locally
VITE_APP_PORT=5173

# Build output directory for Vite
VITE_APP_OUT_DIR=out

# Enable additional UI for app development
VITE_DEV_TOOLS=false

# Variables starting with VITE_ will be hard coded into the built app
VITE_GRAPHQL_HTTP_URL=http://localhost:4000/graphql
VITE_GRAPHQL_WS_URL=ws://localhost:4000/graphql

# Google Login Client ID (uncomment and set VITE_MOCK_GOOGLE_AUTH to false to enable)
# VITE_GOOGLE_CLIENT_ID="123456789000-abcdabcdabcdabcdabcdabcd123abcd1.apps.googleusercontent.com"

# --------------------- API -------------------------

# Google Client Secret (uncomment and set VITE_MOCK_GOOGLE_AUTH to false to enable)
# GOOGLE_CLIENT_SECRET=ABCDEF-abcdefgabcdefgabcdef123dca12

# MongoDB connection URI
MONGODB_URI=mongodb://localhost:27017/notes?replicaSet=rs0
# MongoDB tier type: "free" (M0), "enterprise" (M10 or higher)
MONGODB_TIER=enterprise
# Service name for Docker container communication
DOCKER_MONGODB_SERVICE_NAME=mongod

# DynamoDB local endpoint
DYNAMODB_ENDPOINT=http://localhost:8000
# Service name for Docker container communication
DOCKER_DYNAMODB_SERVICE_NAME=dynamodb-local

# AWS REST API URL
AWS_REST_API_URL=http://localhost:3000

#############################################################################
############################ Infrastructure #################################
#############################################################################

# --------------------- DOMAINS ---------------------

# Domains in Route53, format: "<zoneName>,<zoneId>,<primaryName>(,<aliases>);..."
DOMAINS="mydomain.com,ABCDEFG123ABCEF12312,sub.mydomain.com"

# --------------------- CLOUDFRONT ------------------

# ACM certificate ARN for CloudFront (must be in us-east-1)
CLOUDFRONT_CERTIFICATE_ARN=arn:aws:acm:us-east-1:123456789012:certificate/aaaaaaaa-bbbb-cccc-eeee-ffffffffffff
# Disable CDN caching for static files (default: false)
DEBUG_DISABLE_CDN_CACHING=false

# --------------------- MongoDB Atlas ----------------

# STS region for AWS IAM Authentication with MongoDB Atlas
STS_REGION=eu-west-1

# Secret "cfn/atlas/profile/default" must be defined in AWS Secrets Manager (plaintext: { "PublicKey": "<public key value>", "PrivateKey": "<private key value>" })
MONGODB_ATLAS_PROFILE=default
# Existing MongoDB Atlas organization ID
MONGODB_ATLAS_ORG_ID=1234adadabdc12312312ccdg
MONGODB_ATLAS_REGION=EU_WEST_1
# Project name (must be unique within organization)
MONGODB_ATLAS_PROJECT_NAME=project-notes
MONGODB_ATLAS_CLUSTER_NAME=cluster-notes
MONGODB_ATLAS_DATABASE_NAME=notes

# --------------------- DynamoDB ---------------------

# DynamoDB region for WebSocket state
DYNAMODB_REGION=eu-west-1

# --------------------- API Gateway ------------------

# Region for sending WebSocket messages
API_GATEWAY_MANAGEMENT_REGION=eu-west-1




