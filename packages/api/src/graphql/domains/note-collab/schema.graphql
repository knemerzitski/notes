################################ Note collabText ################################

extend type Note {
  """
  Note collaboration text
  """
  collabText: CollabText!
}

extend input CreateNoteInput {
  """
  Initial note collaboration values
  """
  collabText: CreateCollabTextInput
}

extend type CreateNotePayload {
  """
  TODO desc
  """
  collabText: CollabText
  """
  TODO desc
  """
  firstCollabTextRecord: CollabTextRecord
}

################################ updateNoteInsertRecord ################################

"""
TODO desc
"""
input UpdateNoteInsertRecordInput {
  """
  Note to be updated by Note.id
  """
  noteId: ObjectID!
  """
  New record to be inserted
  """
  insertRecord: CollabTextRecordInput!
}

"""
TODO desc
"""
type UpdateNoteInsertRecordPayload {
  """
  New record added to text field. Could be a duplicate record. Check isDuplicateRecord field.
  """
  newRecord: CollabTextRecord!
  """
  True if record has already been inserted before. Is always false in subscription.
  """
  isDuplicateRecord: Boolean!
  """
  CollabText after new record is inserted
  """
  collabText: CollabText!
  """
  Note after new record is inserted
  """
  note: Note!
}

extend type Mutation {
  """
  Insert new record to note
  """
  updateNoteInsertRecord(
    input: UpdateNoteInsertRecordInput!
  ): UpdateNoteInsertRecordPayload! @auth
}

extend union SignedInUserMutation = UpdateNoteInsertRecordPayload

################################ UserCollabTextState ################################

"""
TODO desc
"""
type UserCollabTextState {
  """
  latestSelection applies to text at this revision
  """
  revision: NonNegativeInt!
  """
  Latest updated selection range
  """
  latestSelection: CollabTextSelectionRange!
}

################################ Subscription openNoteEvents ################################
"""
TODO desc
"""
union OpenNoteMutation

"""
TODO desc
"""
type OpenNoteEventsPayload {
  """
  Self-descriptive
  """
  mutations: [OpenNoteMutation!]
}

extend type Subscription {
  """
  Subscribe to all events that are relevant to a opened note
  """
  openNoteEvents(noteId: ObjectID!): OpenNoteEventsPayload! @auth
}

################################ PublicUserNoteLink ################################

extend type PublicUserNoteLink {
  """
  Defined when is currently subscribed to openNoteEvents and is viewing note
  """
  collabTextState: UserCollabTextState
}

################################ Events User Subscribed/Unsubscribed ################################

"""
TODO desc
"""
type OpenNoteUserSubscribedEvent {
  """
  This user is subscribed to open note events
  """
  user: PublicUser!
  """
  Affected Note
  """
  note: Note!
}

"""
TODO desc
"""
type OpenNoteUserUnsubscribedEvent {
  """
  This user is no longer subscribed to open note events.
  """
  user: PublicUser!
  """
  Affected Note
  """
  note: Note!
}

extend union SignedInUserMutation =
  | OpenNoteUserSubscribedEvent
  | OpenNoteUserUnsubscribedEvent

################################ Mutation updateOpenNoteSelectionRange ################################

"""
TODO desc
"""
input UpdateOpenNoteSelectionRangeInput {
  """
  Note.id
  """
  noteId: ObjectID!
  """
  Selection applies to this revision of text
  """
  revision: NonNegativeInt!
  """
  New selection range
  """
  selectionRange: CollabTextSelectionRangeInput!
}

"""
TODO desc
"""
type UpdateOpenNoteSelectionRangePayload {
  """
  User CollabText state
  """
  collabTextState: UserCollabTextState!
  """
  Self-descriptive
  """
  collabText: CollabText!
  """
  The open note
  """
  note: Note!
  """
  CollabText state applies to this user
  """
  user: PublicUser!
}

extend type Mutation {
  """
  TODO desc
  """
  updateOpenNoteSelectionRange(
    input: UpdateOpenNoteSelectionRangeInput!
  ): UpdateOpenNoteSelectionRangePayload! @auth
}

extend union OpenNoteMutation = UpdateOpenNoteSelectionRangePayload

extend union SignedInUserMutation = UpdateOpenNoteSelectionRangePayload
